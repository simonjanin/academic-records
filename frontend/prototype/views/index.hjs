<!DOCTYPE html>
<html>
  <head>
    <title>{{ title }}</title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <!-- Latest compiled and minified CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
    <!-- Optional theme -->
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css" integrity="sha384-rHyoN1iRsVXV4nD0JutlnGaslCJuC7uwjduW9SVrLvRYooPp2bWYgmgJQIXwl/Sp" crossorigin="anonymous">

    <script type="text/javascript" src="../dist/bignumber/bignumber.min.js"></script>
    <script type="text/javascript" src="../dist/web3/web3-light.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/js-sha3/0.5.5/sha3.min.js"></script>
    <!-- stub api implementation goes here-->
    <script type="text/javascript">
    function Api(web3){
        this.web3 = web3;
      }
    //passes contract without newlines to funtion
    Api.prototype.getContractSource = function(done){
      var client = new XMLHttpRequest();
      client.open('GET', '/contracts/register_diploma.sol',true);
      client.onreadystatechange = function() {
        if (this.readyState == 4 && this.status == 200) {
          done(null,client.responseText);
        }
      }
      client.send();
    }

    Api.prototype.getCompiledContract = function (done) {
      this.getContractSource(function(error,contractString){
          web3.eth.compile.solidity(contractString,function(err,result){
            if(err){
              return console.error(err);
            }
            var contract = web3.eth.contract(result);
            done(null,contract);
          });
      });
    }

    Api.prototype.createContract = function(done){
      this.getCompiledContract(function(err,compiledContract){
        web3.eth.contract(compiledContract.abi.diploma.info.abiDefinition).new({gas:1000000,from:web3.eth.defaultAccount,data:compiledContract.abi.diploma.code},function(err,contract){
          if(err){
            return console.error(err);
          }
          if(contract.address){
            done(null,contract);
          }
        });
      });
    }
    Api.prototype.getInsertedContract = function(done){
      var myThis = this;
      this.getCompiledContract(function(err,compiledContract){
         var diploma =   web3.eth.contract(compiledContract.abi.diploma.info.abiDefinition).at(myThis.contractAddress);
         done(null,diploma);
      });
    }

    Api.prototype.add_university = function(callerUniversityId, universityId, name, owner, pubkey_hash,done) {
        this.getInsertedContract(function(err,diploma){
            diploma.add_university(callerUniversityId,universityId,name,owner,pubkey_hash);
            done(null,null);
        });
    }
    Api.prototype.add_diploma = function(universityId, diplomaId, diploma_ipfs_link,done) {
      this.getInsertedContract(function(err,diploma){
          diploma.add_diploma( universityId,diplomaId,diploma_ipfs_link);
          done(null,null);
      });
    }
    Api.prototype.contractAddress = "0x28b04e4b04ff18036cb2181900807dfe2357e612";

    Api.prototype.calculateHashFromString = function(data,done){
        done(null,keccak_256(data));
    }

    Api.prototype.getHashFromFile = function(path,done){
      var myThis = this;
      var reader = new FileReader();
      reader.onload= function(evt){
        var content = evt.target.result;
        myThis.calculateHashFromString(content,function(err,hash){
          hash = '0x' + hash;
          console.log('Hash for ' + path + ' is ' + hash);
          done(null,hash);
        });
      }
      reader.readAsText(path);
    }

    Api.prototype.checkDiploma = function(hashedString,universityId,diplomaId,done){
      var myThis = this;
      this.getInsertedContract(function(err,contract){

          var nodeHash = contract.get_diploma_hash(universityId,diplomaId);
          console.log('Hash for university '+ universityId + ' and diploma ' + diplomaId + ' is ' + nodeHash + " and file " + hashedString);
          var returnv = nodeHash == hashedString;
          done(null,returnv);
        });
    }

    var Web3 = require("web3");
    var web3 = new Web3();
    web3.setProvider(new web3.providers.HttpProvider());
    web3.eth.defaultAccount = web3.eth.accounts[0];
    var api = new Api(web3);

    function add_university(){
        var caller = $('#InputUniversityCaller').val() || "";
        var universityId = $('#InputUniversityId').val() ||"";
        var universityName = $('#InputUniversityName').val() || "";
        var universityAddress = $('#InputUniversityAdress').val() || "";
        console.log("Adding university with: " + caller + ":" + universityId + ":" + universityName + ":" + universityAddress);
        api.add_university(caller,universityId,universityName,universityAddress,"",function(){
          console.log("received university confirmation");
          flipPanel($('#panel-university'),function () {
            $('#InputUniversityCaller').val('');
            $('#InputUniversityId').val('');
            $('#InputUniversityName').val('');
            $('#InputUniversityAddress').val('');
          });
        });
    }

    function add_diploma(){
        var diplomaId = $('#InputDiplomaId').val() || "";
        var diplomaUniversityId = $('#InputDiplomaUniversityId').val() || "";
        var diplomaFile = $('#InputDiplomaFile')[0].files[0];
        console.log("Adding diploma with: " + diplomaId + ":"+ diplomaUniversityId + ":" + diplomaFile);
        api.getHashFromFile(diplomaFile,function(err,diplomaHash){


          api.add_diploma(diplomaId,diplomaUniversityId,diplomaHash,function(){
            flipPanel($('#panel-diploma'),function(){
            console.log("received diploma confirmation");
              $('#InputDiplomaId').val('');
              $('#InputDiplomaUniversityId').val('');
              $('#InputDiplomaLink').val('');
            });
          });
      });
    }

    function check_certificate_url(){
      var universityId = $('#InputCertificateUniversityId').val() || "";
      var diplomaId = $('#InputCertificateDiplomaId').val() || "";
      var file = $('#InputCertificateFile')[0].files[0] ;
      //get string from file
      api.getHashFromFile(file,function(err,hash){
          api.checkDiploma(hash,universityId,diplomaId,function(err,val){
            var p = $('#CertificateAlertPlaceHolder');
            p.removeClass('alert');
            p.removeClass('alert-success');
            p.removeClass('alert-danger');

            p.addClass('alert');
            console.log("Diploma is valid " + val);
            if(val){
              //check successfull
              p.addClass('alert-success');
              p.text('Certificate is valid!');
            }else{
              //invalid certificate

              p.addClass('alert-danger');
              p.text('Certificate check failed! This certificate is invalid!');
            }
          });
      });
    }
    function flipPanel(panel,intermediate){
      panel.addClass('panel-flip');
      setTimeout(function(){
        panel.removeClass(panel);
      },2000);
      setTimeout(intermediate,500);
    }
    </script>
  </head>
  <body>
    <div class="container">
      <div class="jumbotron">
        <h1>Get your diplomas certified!</h1>
        <h4>All your diplomas managed safely in the blockchain.</h4>
      </div>
      <div class="row">
        <div class="col-md-12 col-cs-12">
        <div class="panel panel-default"  id="panel-university">
          <div class="panel-heading">
            Check certificate
          </div>


          <div class="panel-body">
            <form>

                <div class="form-group">
                  <label for="InputCertificateUniversityId">University ID</label>
                  <input type="text" class="form-control" id="InputCertificateUniversityId" placeholder="Very long number">
                </div>

                <div class="form-group">
                  <label for="InputCertificateDiplomaId">Diploma ID</label>
                  <input type="text" class="form-control" id="InputCertificateDiplomaId" placeholder="Very long number">
                </div>
              <div class="form-group">
                <label for="InputCertificateFile">Certificate File</label>
                <input type="file" class="form-control" id="InputCertificateFile" >
              </div>
              <div id="CertificateAlertPlaceHolder">

              </div>
              <button onClick="check_certificate_url()" type="button" class="btn btn-primary pull-right">Check</button>

            </form>
        </div>
      </div>
    </div>
      </div>
      <div class="row">
        <div class="col-md-6 col-xs-12">
          <div class="panel panel-default"  id="panel-university">
            <div class="panel-heading">
              Add University
            </div>


            <div class="panel-body">
              <form>
                <div class="form-group form-university">
                  <label for="InputUniversityCaller">Creating University ID</label>
                  <input type="text" class="form-control" id="InputUniversityCaller" placeholder="Very long number">
                </div>

                <div class="form-group">
                  <label for="InputUniversityId">University ID</label>
                  <input type="text" class="form-control" id="InputUniversityId" placeholder="Very long number">
                </div>

                <div class="form-group">
                    <label for="InputUniversityName">University</label>
                    <input type="text" class="form-control" id="InputUniversityName" placeholder="Harvard Medical School">
                </div>

                <div class="form-group">
                  <label for="InputUniversityAddress">University Address</label>
                  <input type="text" class="form-control" id="InputUniversityAddress" placeholder="Ethereum Account (e.g. 0x1321983782abe38294388)">
                </div>
                <button onClick="add_university()" type="button" class="btn btn-primary pull-right">Submit</button>
              </form>
          </div>
        </div>
      </div>

      <div class="col-md-6 col-xs-12">
        <div class="panel panel-default" id ="panel-diploma">
          <div class="panel-heading">
            Add Diploma
          </div>


          <div class="panel-body" >
            <form>
              <div class="form-group form-diploma">
                <label for="InputDiplomaId">Diploma ID</label>
                <input type="text" class="form-control" id="InputDiplomaId" placeholder="Very long number">
              </div>

              <div class="form-group">
                <label for="InputDiplomaUniversityId">University ID</label>
                <input type="text" class="form-control" id="InputDiplomaUniversityId" placeholder="Very long number">
              </div>

              <div class="form-group">
                  <label for="InputDiplomaFile">Certificate File</label>
                  <input type="file" class="form-control" id="InputDiplomaFile" placeholder="9c22ff5f21f0b81b113e63f7db6da94fedef11b2119b4088b89664fb9a3cb658">
              </div>

              <button onClick="add_diploma()" type="button" class="btn btn-primary pull-right">Submit</button>
            </form>
        </div>
      </div>
    </div>

    </div>
  </div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" crossorigin="anonymous"></script>

  </body>
</html>
